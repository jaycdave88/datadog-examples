# -*- mode: ruby -*-
# vi: set ft=ruby :

DEFAULT_DD_ENV = {
    DD_SITE: "datadoghq.com",
    DD_ENV: "test",
    DD_TAGS: "[datacenter:local]", # must be a valid yaml list [a:b, c:d]. Used in the official role
    DD_HOST_TAGS: "env:test,datacenter:local" # Comma separated. Used in the script installer
}
RUNTIME_DD_ENV = DEFAULT_DD_ENV.merge(ENV).select { |k, v| k.start_with?('DD_') }

BOXES = [
    {
        name: "ubuntu2004",
        hostname: "ubuntu2004",
        box: "ubuntu/focal64"
    },
    # {
    #     name: "ubuntu1804",
    #     hostname: "ubuntu1804",
    #     box: "ubuntu/bionic64"
    # },
    # {
    #     name: "centos8",
    #     hostname: "centos8",
    #     box: "centos/8"
    # },
    # {
    #     name: "centoss8",
    #     hostname: "centoss8",
    #     box: "centos/stream8"
    # },
    # {
    #     name: "centos7",
    #     hostname: "centos7",
    #     box: "centos/7"
    # },
]

Vagrant.configure("2") do |vagrant|
    BOXES.each do |config|
        vagrant.vm.define config[:name] do |machine|
            machine.vm.box = config[:box]
            machine.vm.hostname = config[:hostname]
            machine.vm.provider "virtualbox" do |vb|
                vb.name = config[:hostname]
                vb.cpus = 2
                vb.memory = "1024"
                vb.customize ["modifyvm", :id, "--cpuexecutioncap", "90"]
              end
            machine.vm.provision :ansible do |ansible|
                ansible.playbook = "provisioning/ansible/playbook.yaml"
                ansible.verbose = "v"
                ansible.extra_vars = {
                    vagrant: {
                        datadog: {
                            env: RUNTIME_DD_ENV,
                            agent_via_role: true,
                            agent_via_script: false,
                        }
                    }
                }
            end
        end
    end
end
